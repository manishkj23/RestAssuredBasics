package BasicsProgramming;

import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class GetDuplicateDigitFromAnArray {

	public static void main(String[] args) {


		int[] nums = {1, 2, 3, 4, 3, 5, 6, 7, 8, 7, 9, 8,10};

//	    int count =0;
//	    for ( int i=0;i<nums.length;i++)
//	    {
//	        for ( int j=i+1;j<nums.length;j++)
//
//	        {
//	            if(nums[i] == nums[j])
//	            count++;
//	        }
//
//	        System.out.println(nums[i] + ":" + count);
//	    }
	    
	    
//	 List<String> arr = Arrays.asList(nums);
	    
//	   HashMap<Integer,Integer> map = new HashMap<>();
//
//	   for ( int i=0;i<nums.length;i++)
//	   {
//	        if(map.containsKey(nums))
//	       {
//	           map.put(nums,map.get(nums)+1);
//	        }
//	       else
//	        {
//	            map.put(nums,1);
//	       }
//	   }
//
//	    for(Map.Entry<Integer,Integer> entry : map.entrySet())
//	    {
//	       System.out.println(entry.getKey()+":" + entry.getValue());
//	       if(entry.getValue() > 1)
//	       {
//	        System.out.println("Duplicate values are : " + entry.getKey());
//	       }
//	    }
//	    
	    
	    
	    HashMap<Integer, Integer> numCount = new HashMap<>();

        for (int num : nums) {
            if (numCount.containsKey(num)) {
                numCount.put(num, numCount.get(num) + 1);
            } else {
                numCount.put(num, 1);
            }
        }

        System.out.print("Duplicate digits: ");
        for (Map.Entry<Integer, Integer> entry : numCount.entrySet()) {
            if (entry.getValue() > 1) {
                System.out.print(entry.getKey() + " ");
            }
        }
    }
	    
	}

}
