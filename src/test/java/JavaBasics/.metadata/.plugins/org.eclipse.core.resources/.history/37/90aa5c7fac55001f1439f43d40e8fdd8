package BasicsProgramming;

import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;

public class DuplicatesElementsInJavaArray {

	public static void main(String[] args) {
		//Method:1  --- > Compare each elements : O(nxn) : worst solution
		
		String names[] = {"Java", "JavaScripts", "Python", "Ruby", "C", "Java","Ruby"};
		for ( int i=0; i<names.length; i++)
		{
			for ( int j=i+1; j<names.length; j++)
			{
				
				if(names[i].equals(names[j]))
					{
					System.out.println("Duplicate name is :" + names[i]);
					}
			}
		}


	
		System.out.println("***********************************");

		//Method:2 -- > Using HashSet : Java Collections as it stores only unique values: O(n)

		Set<String> store = new HashSet<String>();
		for ( String name : names)
		{
			if(store.add(name) == false)
				System.out.println("Dup values are: " + name );
		}
		
		System.out.println("***********************************");
		
		//Method:3 -- > Using HashMap : Java Collections as it stores only unique values: O(n)
		Map<String, Integer> storeMap = new HashMap<String, Integer>();
		for ( String name : names)
		{
			Integer count = storeMap.get(name);
			if(count == null)
			{
				storeMap.put(name, 1);
			}
			else
			{
				storeMap.put(name, ++count);
			}
		}


	}
}
